import { createStore } from 'vuex'

export default createStore({
        state: {
            count: 0,
            cart: [],
            data: []
        },
        getters: {
            cartItems(state) {
                return state.cart
            },
            totalCartItems(state) {
                return state.cart.length
            },
            totalCartPrice(state) {
                return state.cart
                    .reduce((total, item) => total + item.price, 0)
            }
        },
        mutations: {
            increment(state) {
                state.count++
            },
            decrement(state) {
                state.count++
            },
            ADD_ITEM(state, item) {
                state.cart.push(item)
            },
            setData(state, data) {
                state.data = data
            },
        },
        actions: {
            addItemToCart(context, item) {
                context.commit('ADD_ITEM', item)
            },
            fetchData(context) {
                setTimeout(() => {
                    const dataFromServer = ['data1', 'data2', 'data3'] //получение данных с сервера
                    context.commit('setData', dataFromServer)
                }, 2000);
            }
        },
        modules: {}
    })
    //1
    // 2. Создайте счетчик который хранит состояние count
    // 3. Создайте две мутации, которые увеличивают и уменьшают значение счетчика
    //2
    // Управление корзиной покупок
    // Вы разрабатываете интернет - магазин и вам необходимо реализовать функциональность управления корзиной покупок с использованием Vuex и геттеров.
    // 1. Создайте хранилище Vuex с именем "store".
    // 2. В состоянии(state) хранилища создайте массив "cart", в котором будут храниться объекты товаров в корзине.Каждый объект товара должен иметь следующие свойства: id, name, price.
    // 3. Создайте мутацию(mutation) с именем "ADD_ITEM_TO_CART", которая принимает товар в качестве параметра и добавляет его в массив "cartItems".
    // 4. Создайте геттер(getter) с именем "cartItems", который возвращает массив товаров в корзине. <
    //     button @click = "addItemToCart({ id: 1, name: 'Товар', price: 10})" >
    //     Добавить в корзину < /button>
    // 1. Создайте геттер с именем "totalItems", который возвращает общее количество товаров в корзине.
    // 2. Создайте геттер с именем "totalPrice", который возвращает общую стоимость всех товаров в корзине.
    // 3. Создайте действие(action) с именем "addToCart", которое принимает товар в качестве параметра и вызывает мутацию "ADD_ITEM_TO_CART".
    // 4. В компоненте Vue.js создайте список товаров, которые можно добавить в корзину.Каждый товар должен иметь кнопку "Добавить в корзину", при нажатии на которую вызывается метод для добавления товара в корзину.
    // 5. Выведите информацию о корзине покупок на вашем компоненте.Отобразите список товаров в корзине, общее количество товаров и общую стоимость.

// Задание 3:
//     Вам необходимо создать функциональность получения данных с сервера и сохранения их в хранилище Vuex с использованием действий.
// 1. В вашем хранилище Vuex создайте состояние(state), в котором будет храниться массив данных.
// 2. Создайте мутацию(mutation) для сохранения полученных данных в состояние.
// 3. Создайте действие(action) для выполнения запроса к серверу и вызова соответствующей мутации.
// 4. В вашем компоненте Vue.js вызовите действие для получения данных с сервера и отобразите их на вашем компоненте.
// 4. В вашем компоненте Vue.js вызовите действие для получения данных с сервера и отобразите их на вашем компоненте.